RunStartRequest:
  type: object
  required:
  - workflow
  - clientId
  properties:
    workflow:
      $ref: '#/Workflow'
    clientId:
      type: string
      description: Caller-provided client instance id
RunRef:
  type: object
  required:
  - runId
  - status
  - definitionHash
  - clientId
  - createdAt
  properties:
    runId:
      type: string
    status:
      $ref: '#/RunStatus'
    definitionHash:
      type: string
    clientId:
      type: string
    createdAt:
      type: string
      format: date-time
Run:
  type: object
  required:
  - runId
  - status
  - definitionHash
  - clientId
  properties:
    runId:
      type: string
    status:
      $ref: '#/RunStatus'
    definitionHash:
      type: string
    clientId:
      type: string
    startedAt:
      type: string
      format: date-time
      nullable: true
    finishedAt:
      type: string
      format: date-time
      nullable: true
    error:
      $ref: '#/ResultError'
      nullable: true
    artifacts:
      $ref: '#/RunArtifactList'
      nullable: true
    nodes:
      $ref: '#/RunNodesList'
      nullable: true
RunStatus:
  type: string
  enum:
  - queued
  - running
  - succeeded
  - failed
  - cancelled
RunList:
  type: object
  required:
  - items
  properties:
    items:
      type: array
      items:
        $ref: '#/Run'
    nextCursor:
      type: string
      nullable: true
RunArtifact:
  type: object
  required:
  - resourceId
  - workerId
  - type
  properties:
    resourceId:
      type: string
    workerId:
      type: string
    type:
      type: string
    sizeBytes:
      type: integer
      minimum: 0
      nullable: true
    inline:
      type: boolean
      nullable: true
    expiresAt:
      type: string
      format: date-time
      nullable: true
    metadata:
      type: object
      additionalProperties: true
      nullable: true
RunArtifactList:
  type: array
  items:
    $ref: '#/RunArtifact'
RunNodeStatus:
  type: object
  required:
  - nodeId
  - taskId
  - status
  properties:
    nodeId:
      type: string
    taskId:
      type: string
    status:
      $ref: '#/RunStatus'
    workerId:
      type: string
      nullable: true
    startedAt:
      type: string
      format: date-time
      nullable: true
    finishedAt:
      type: string
      format: date-time
      nullable: true
    seq:
      type: integer
      nullable: true
    pendingAck:
      type: boolean
      nullable: true
      description: True when the scheduler has dispatched the node and is waiting
        for a worker ACK.
    dispatchId:
      type: string
      nullable: true
      description: Envelope id of the last cmd.dispatch frame for this node.
    ackDeadline:
      type: string
      format: date-time
      nullable: true
      description: Scheduler-side deadline for receiving the ACK for the last dispatch.
    resourceRefs:
      type: array
      items:
        type: object
        additionalProperties: true
    affinity:
      type: object
      additionalProperties: true
      nullable: true
    artifacts:
      type: array
      items:
        type: object
        additionalProperties: true
    result:
      type: object
      additionalProperties: true
      nullable: true
    metadata:
      type: object
      additionalProperties: true
      nullable: true
    error:
      $ref: '#/ResultError'
      nullable: true
RunNodesList:
  type: array
  items:
    $ref: '#/RunNodeStatus'
Workflow:
  type: object
  additionalProperties: false
  required:
  - id
  - schemaVersion
  - metadata
  - nodes
  - edges
  properties:
    id:
      type: string
      description: Workflow UUID
    schemaVersion:
      type: string
      description: e.g. "2025-10"
      pattern: ^[0-9]{4}-[0-9]{2}$
    metadata:
      $ref: '#/WorkflowMetadata'
    nodes:
      type: array
      minItems: 1
      items:
        $ref: '#/WorkflowNode'
    edges:
      type: array
      minItems: 0
      items:
        $ref: '#/WorkflowEdge'
    tags:
      type: array
      description: Workflow-level tags.
      items:
        type: string
WorkflowRef:
  type: object
  required:
  - workflowId
  properties:
    workflowId:
      type: string
WorkflowList:
  type: object
  required:
  - items
  properties:
    items:
      type: array
      items:
        $ref: '#/Workflow'
    nextCursor:
      type: string
      nullable: true
PackageList:
  type: object
  required:
  - items
  properties:
    items:
      type: array
      items:
        $ref: '#/PackageSummary'
PackageSummary:
  type: object
  additionalProperties: false
  required:
  - name
  - versions
  properties:
    name:
      type: string
    description:
      type: string
    latestVersion:
      type: string
    defaultVersion:
      type: string
    versions:
      type: array
      items:
        type: string
PackageDetail:
  type: object
  additionalProperties: false
  required:
  - name
  - version
  - manifest
  properties:
    name:
      type: string
    version:
      type: string
    availableVersions:
      type: array
      items:
        type: string
    manifest:
      $ref: '#/PackageManifest'
PackageManifest:
  type: object
  additionalProperties: false
  required:
  - schemaVersion
  - name
  - version
  - description
  - adapters
  - python
  - nodes
  properties:
    schemaVersion:
      type: string
      description: Manifest schema version (semver).
      pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
    name:
      type: string
      description: Package identifier (lowercase with dots/underscores).
      pattern: '^[a-z0-9]+([._-][a-z0-9]+)*$'
    version:
      type: string
      description: Package version in semver format.
      pattern: '^[0-9]+\.[0-9]+\.[0-9]+(?:[-+][0-9A-Za-z\.-]+)?$'
    description:
      type: string
      description: Short summary of the package.
    adapters:
      type: array
      minItems: 1
      items:
        $ref: '#/ManifestAdapter'
    python:
      $ref: '#/ManifestPythonConfig'
    nodes:
      type: array
      minItems: 1
      items:
        $ref: '#/ManifestNode'
    resources:
      type: array
      items:
        $ref: '#/ManifestResource'
    hooks:
      $ref: '#/ManifestHooks'
    signature:
      $ref: '#/ManifestSignature'
ManifestAdapter:
  type: object
  additionalProperties: false
  required:
  - name
  - entrypoint
  - capabilities
  properties:
    name:
      type: string
    entrypoint:
      type: string
      pattern: '^[A-Za-z_][A-Za-z0-9_.]*:[A-Za-z_][A-Za-z0-9_.]*$'
    capabilities:
      type: array
      minItems: 1
      items:
        type: string
    description:
      type: string
    idempotency:
      type: string
    metadata:
      type: object
      additionalProperties: true
ManifestPythonConfig:
  type: object
  additionalProperties: false
  required:
  - requires
  properties:
    requires:
      type: string
    dependencies:
      type: array
      items:
        type: string
ManifestNode:
  type: object
  additionalProperties: false
  required:
  - type
  - status
  - category
  - label
  - adapter
  - handler
  - schema
  properties:
    type:
      type: string
      pattern: '^[A-Za-z0-9_.-]+$'
    status:
      type: string
      enum:
      - draft
      - published
      - deprecated
    category:
      type: string
    label:
      type: string
    description:
      type: string
    tags:
      type: array
      items:
        type: string
    adapter:
      type: string
      pattern: '^[A-Za-z0-9_.-]+$'
    handler:
      type: string
      pattern: '^[A-Za-z_][A-Za-z0-9_]*$'
    config:
      type: object
      description: Optional static configuration forwarded to the handler.
      additionalProperties: true
      default: {}
    schema:
      $ref: '#/ManifestNodeSchema'
    ui:
      $ref: '#/ManifestNodeUI'
ManifestNodeSchema:
  type: object
  additionalProperties: false
  properties:
    parameters:
      $ref: '#/ManifestJsonSchema'
    results:
      $ref: '#/ManifestJsonSchema'
ManifestNodeUI:
  type: object
  additionalProperties: false
  properties:
    inputPorts:
      type: array
      items:
        $ref: '#/ManifestPort'
    widgets:
      type: array
      items:
        $ref: '#/ManifestWidget'
ManifestPort:
  type: object
  additionalProperties: false
  required:
  - key
  - label
  - binding
  properties:
    key:
      type: string
    label:
      type: string
    description:
      type: string
    binding:
      $ref: '#/ManifestBinding'
ManifestWidget:
  type: object
  additionalProperties: false
  required:
  - key
  - label
  - component
  - binding
  properties:
    key:
      type: string
    label:
      type: string
    component:
      type: string
    binding:
      $ref: '#/ManifestBinding'
    options:
      type: object
      additionalProperties: true
ManifestBinding:
  type: object
  additionalProperties: false
  required:
  - path
  properties:
    path:
      type: string
    mode:
      type: string
      enum:
      - read
      - write
      - two_way
ManifestResource:
  type: object
  additionalProperties: false
  required:
  - path
  - type
  properties:
    path:
      type: string
    type:
      type: string
    sha256:
      type: string
      pattern: '^[A-Fa-f0-9]{64}$'
ManifestHooks:
  type: object
  additionalProperties: false
  properties:
    install:
      type: array
      items:
        type: string
    uninstall:
      type: array
      items:
        type: string
ManifestSignature:
  type: object
  additionalProperties: false
  properties:
    sha256:
      type: string
      pattern: '^[A-Fa-f0-9]{64}$'
    signedAt:
      type: string
    signedBy:
      type: string
ManifestJsonSchema:
  oneOf:
  - type: object
    additionalProperties: true
  - type: boolean
WorkflowMetadata:
  type: object
  additionalProperties: false
  properties:
    name:
      type: string
    description:
      type: string
    tags:
      type: array
      items:
        type: string
    environment:
      type: string
  required:
  - name
WorkflowNode:
  type: object
  additionalProperties: false
  required:
  - id
  - type
  - package
  - status
  - category
  - label
  - position
  properties:
    id:
      type: string
      description: Node UUID
    type:
      type: string
      description: e.g. "playwright.open_page"
    package:
      $ref: '#/NodePackage'
    status:
      type: string
      description: Node lifecycle state.
      enum:
      - draft
      - published
      - deprecated
    category:
      type: string
      description: Group/category shown in the builder palette.
    label:
      type: string
    description:
      type: string
      description: Longer description of the node behaviour.
    tags:
      type: array
      description: Keywords for search/filter.
      items:
        type: string
    position:
      type: object
      required:
      - x
      - y
      additionalProperties: false
      properties:
        x:
          type: number
        y:
          type: number
    parameters:
      type: object
      description: Default parameter payload seeded from the manifest schema.
      additionalProperties: true
    results:
      type: object
      description: Default results payload seeded from the manifest schema.
      additionalProperties: true
    schema:
      type: object
      description: JSON Schemas for parameters/results.
      additionalProperties: false
      properties:
        parameters:
          type: object
          additionalProperties: true
        results:
          type: object
          additionalProperties: true
    ui:
      $ref: '#/NodeUI'
NodePackage:
  type: object
  additionalProperties: false
  required:
  - name
  - version
  properties:
    name:
      type: string
    version:
      type: string
NodeUI:
  type: object
  additionalProperties: false
  properties:
    inputPorts:
      type: array
      items:
        $ref: '#/UIPort'
    outputPorts:
      type: array
      items:
        $ref: '#/UIPort'
    widgets:
      type: array
      items:
        $ref: '#/UIWidget'
UIPort:
  type: object
  additionalProperties: false
  required:
  - key
  - label
  - binding
  properties:
    key:
      type: string
    label:
      type: string
    binding:
      $ref: '#/UIBinding'
UIBinding:
  type: object
  additionalProperties: false
  required:
  - path
  - mode
  properties:
    path:
      type: string
      description: e.g.
      parameters.url / results.status: null
    mode:
      type: string
      enum:
      - read
      - write
      - two_way
UIWidget:
  type: object
  additionalProperties: false
  required:
  - key
  - label
  - component
  - binding
  properties:
    key:
      type: string
    label:
      type: string
    component:
      type: string
      description: string|number|enum|json...
    binding:
        $ref: '#/UIBinding'
    options:
      type: object
      additionalProperties: true
WorkflowEdge:
  type: object
  additionalProperties: false
  required:
  - id
  - source
  - target
  properties:
    id:
      type: string
    source:
      $ref: '#/EdgeEndpoint'
    target:
      $ref: '#/EdgeEndpoint'
EdgeEndpoint:
  type: object
  additionalProperties: false
  required:
  - node
  - port
  properties:
    node:
      type: string
      description: Node UUID
    port:
      type: string
      description: Port key defined by the node UI
Worker:
  type: object
  required:
  - id
  - lastHeartbeatAt
  - queues
  properties:
    id:
      type: string
    hostname:
      type: string
    lastHeartbeatAt:
      type: string
      format: date-time
    queues:
      type: array
      items:
        type: string
    packages:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          version:
            type: string
          status:
            type: string
            enum:
            - installed
            - installing
            - uninstalling
            - removed
            - failed
            - unknown
    meta:
      type: object
      additionalProperties: true
WorkerCommand:
  type: object
  oneOf:
  - properties:
      type:
        const: drain
    required:
    - type
  - properties:
      type:
        const: rebind
      queue:
        type: string
    required:
    - type
    - queue
  - properties:
      type:
        const: pkg.install
      name:
        type: string
      version:
        type: string
    required:
    - type
    - name
  - properties:
      type:
        const: pkg.uninstall
      name:
        type: string
    required:
    - type
    - name
  additionalProperties: false
CommandRef:
  type: object
  required:
  - commandId
  - workerId
  - acceptedAt
  properties:
    commandId:
      type: string
    workerId:
      type: string
    acceptedAt:
      type: string
      format: date-time
EventType:
  type: string
  enum:
  - worker.heartbeat
  - worker.status
  - worker.package
  - run.dispatch
  - run.result
  - run.error
  - command.ack
  - command.error
EventEnvelope:
  type: object
  required:
  - type
  - ts
  - id
  - payload
  properties:
    type:
      $ref: '#/EventType'
    ts:
      type: string
      format: date-time
    id:
      type: string
      description: Monotonic event id for resume
    tenant:
      type: string
      nullable: true
    payload:
      $ref: '#/WsPayload'
WsPayload:
  oneOf:
  - $ref: '#/CmdDispatch'
  - $ref: '#/NodeResult'
  - $ref: '#/NodeError'
  - $ref: '#/WorkerHeartbeat'
  - $ref: '#/WorkerPackageEvent'
  - $ref: '#/CommandAck'
  - $ref: '#/CommandError'
CmdDispatch:
  type: object
  required:
  - kind
  - runId
  - nodeId
  - trace
  - definitionHash
  properties:
    kind:
      const: cmd.dispatch
    runId:
      type: string
    nodeId:
      type: string
    definitionHash:
      type: string
    trace:
      $ref: '#/TraceContext'
    payload:
      type: object
      additionalProperties: true
NodeResult:
  type: object
  required:
  - kind
  - runId
  - nodeId
  - status
  - definitionHash
  properties:
    kind:
      const: result
    runId:
      type: string
    nodeId:
      type: string
    status:
      type: string
      enum:
      - succeeded
      - failed
    definitionHash:
      type: string
    outputs:
      type: object
      additionalProperties: true
    metadata:
      type: object
      properties:
        error:
          $ref: '#/ResultError'
          nullable: true
        lease:
          type: object
          additionalProperties: true
          nullable: true
        trace:
          $ref: '#/TraceContext'
          nullable: true
NodeError:
  type: object
  required:
  - kind
  - runId
  - nodeId
  - error
  - definitionHash
  properties:
    kind:
      const: error
    runId:
      type: string
    nodeId:
      type: string
    definitionHash:
      type: string
    error:
      $ref: '#/ResultError'
    metadata:
      type: object
      properties:
        trace:
          $ref: '#/TraceContext'
          nullable: true
WorkerHeartbeat:
  type: object
  properties:
    kind:
      const: worker.heartbeat
    workerId:
      type: string
    at:
      type: string
      format: date-time
    queues:
      type: array
      items:
        type: string
WorkerPackageEvent:
  type: object
  properties:
    kind:
      const: worker.package
    workerId:
      type: string
    name:
      type: string
    version:
      type: string
      nullable: true
    status:
      type: string
      enum:
      - installing
      - installed
      - uninstalling
      - removed
      - failed
    message:
      type: string
      nullable: true
CommandAck:
  type: object
  properties:
    kind:
      const: command.ack
    commandId:
      type: string
    workerId:
      type: string
    receivedAt:
      type: string
      format: date-time
CommandError:
  type: object
  properties:
    kind:
      const: command.error
    commandId:
      type: string
    workerId:
      type: string
    error:
      $ref: '#/ResultError'
TraceContext:
  type: object
  required:
  - traceId
  - spanId
  properties:
    traceId:
      type: string
    spanId:
      type: string
    parentSpanId:
      type: string
      nullable: true
    baggage:
      type: object
      additionalProperties:
        type: string
      nullable: true
ResultError:
  type: object
  required:
  - code
  - message
  properties:
    code:
      type: string
    message:
      type: string
    details:
      type: object
      additionalProperties: true
      nullable: true
Error:
  type: object
  required:
  - error
  - message
  properties:
    error:
      type: string
    message:
      type: string
    requestId:
      type: string
    details:
      type: object
      additionalProperties: true
      nullable: true
