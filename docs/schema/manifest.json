{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://astraflow.dev/schema/package-manifest.json",
  "title": "PackageManifest",
  "type": "object",
  "required": [
    "schemaVersion",
    "name",
    "version",
    "description",
    "adapters",
    "python",
    "nodes"
  ],
  "additionalProperties": false,
  "properties": {
    "schemaVersion": {
      "type": "string",
      "description": "Manifest schema version (semver).",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
    },
    "name": {
      "type": "string",
      "description": "Package identifier (lowercase with dots/underscores).",
      "pattern": "^[a-z0-9]+([._-][a-z0-9]+)*$"
    },
    "version": {
      "type": "string",
      "description": "Package version in semver format.",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+(?:[-+][0-9A-Za-z.-]+)?$"
    },
    "description": {
      "type": "string",
      "description": "Short summary of the package."
    },
    "adapters": {
      "type": "array",
      "description": "Adapter modules exposed by the package.",
      "items": {
        "$ref": "#/$defs/Adapter"
      },
      "minItems": 1
    },
    "python": {
      "$ref": "#/$defs/PythonConfig"
    },
    "nodes": {
      "type": "array",
      "description": "Node definitions surfaced to the builder and scheduler.",
      "items": {
        "$ref": "#/$defs/Node"
      },
      "minItems": 1
    },
    "resources": {
      "type": "array",
      "description": "Static assets bundled with the package.",
      "items": {
        "$ref": "#/$defs/Resource"
      },
      "default": []
    },
    "hooks": {
      "$ref": "#/$defs/Hooks"
    },
    "signature": {
      "$ref": "#/$defs/Signature"
    }
  },
  "$defs": {
    "Adapter": {
      "type": "object",
      "required": [
        "name",
        "entrypoint",
        "capabilities"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique adapter name within the package."
        },
        "entrypoint": {
          "type": "string",
          "description": "Python module path containing adapter handlers.",
          "pattern": "^[A-Za-z_][A-Za-z0-9_.]*$"
        },
        "capabilities": {
          "type": "array",
          "description": "Capabilities registered by this adapter (used for dispatch).",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "description": {
          "type": "string",
          "description": "Adapter level description."
        },
        "idempotency": {
          "type": "string",
          "description": "Idempotency guarantees of the adapter (e.g. per_request)."
        },
        "metadata": {
          "type": "object",
          "description": "Additional adapter specific metadata.",
          "additionalProperties": true
        }
      }
    },
    "PythonConfig": {
      "type": "object",
      "required": [
        "requires"
      ],
      "additionalProperties": false,
      "properties": {
        "requires": {
          "type": "string",
          "description": "Python version requirement specifier."
        },
        "dependencies": {
          "type": "array",
          "description": "Pip requirement specifiers installed during package setup.",
          "items": {
            "type": "string"
          },
          "default": []
        }
      }
    },
    "Node": {
      "type": "object",
      "required": [
        "type",
        "status",
        "category",
        "label",
        "adapter",
        "handler",
        "schema"
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "description": "Fully qualified node type (package scoped).",
          "pattern": "^[A-Za-z0-9_.-]+$"
        },
        "status": {
          "type": "string",
          "description": "Lifecycle state of the node.",
          "enum": [
            "draft",
            "published",
            "deprecated"
          ]
        },
        "category": {
          "type": "string",
          "description": "Grouping category displayed in the builder palette."
        },
        "label": {
          "type": "string",
          "description": "Human readable label rendered in the palette and inspector."
        },
        "description": {
          "type": "string",
          "description": "Extended description of the node behaviour."
        },
        "tags": {
          "type": "array",
          "description": "Free-form tags for searching/filtering.",
          "items": {
            "type": "string"
          }
        },
        "adapter": {
          "type": "string",
          "description": "Adapter name responsible for the node implementation.",
          "pattern": "^[A-Za-z0-9_.-]+$"
        },
        "handler": {
          "type": "string",
          "description": "Handler callable exposed by the adapter.",
          "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
        },
        "config": {
          "type": "object",
          "description": "Optional static configuration forwarded to the handler.",
          "additionalProperties": true,
          "default": {}
        },
        "schema": {
          "$ref": "#/$defs/JsonSchema",
          "description": "JSON Schema describing node parameters/results."
        },
        "ui": {
          "$ref": "#/$defs/NodeUI"
        }
      }
    },
    "NodeUI": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "inputPorts": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Port"
          },
          "default": []
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Widget"
          },
          "default": []
        }
      }
    },
    "Port": {
      "type": "object",
      "required": [
        "key",
        "label",
        "binding"
      ],
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string",
          "description": "Stable identifier for the port."
        },
        "label": {
          "type": "string",
          "description": "Display label for the port."
        },
        "binding": {
          "$ref": "#/$defs/Binding"
        }
      }
    },
    "Widget": {
      "type": "object",
      "required": [
        "key",
        "label",
        "component",
        "binding"
      ],
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string",
          "description": "Unique widget key."
        },
        "label": {
          "type": "string",
          "description": "Widget label."
        },
        "component": {
          "type": "string",
          "description": "Component type rendered by the dashboard."
        },
        "binding": {
          "$ref": "#/$defs/Binding"
        },
        "options": {
          "type": "object",
          "description": "Component options (schema depends on component).",
          "additionalProperties": true
        }
      }
    },
    "Binding": {
      "type": "object",
      "required": [
        "path"
      ],
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string",
          "description": "JSON pointer style path targeted by the binding."
        },
        "mode": {
          "type": "string",
          "description": "Binding mode that describes read/write behaviour.",
          "enum": [
            "read",
            "write",
            "two_way"
          ],
          "default": "write"
        }
      }
    },
    "Resource": {
      "type": "object",
      "required": [
        "path",
        "type"
      ],
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string",
          "description": "Relative path to the bundled resource."
        },
        "type": {
          "type": "string",
          "description": "Resource type (download, archive, script, etc.)."
        },
        "sha256": {
          "type": "string",
          "description": "Optional checksum of the resource content.",
          "pattern": "^[A-Fa-f0-9]{64}$"
        }
      }
    },
    "Hooks": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "install": {
          "type": "array",
          "description": "Scripts executed during install.",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "uninstall": {
          "type": "array",
          "description": "Scripts executed during uninstall.",
          "items": {
            "type": "string"
          },
          "default": []
        }
      }
    },
    "Signature": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "sha256": {
          "type": "string",
          "description": "SHA-256 hash of the archive or manifest.",
          "pattern": "^[A-Fa-f0-9]{64}$"
        },
        "signedAt": {
          "type": "string",
          "description": "Timestamp when the manifest was signed."
        },
        "signedBy": {
          "type": "string",
          "description": "Identity of the signer."
        }
      }
    },
    "JsonSchema": {
      "type": [
        "object",
        "boolean"
      ],
      "description": "Embedded JSON Schema definition.",
      "additionalProperties": true
    }
  }
}
