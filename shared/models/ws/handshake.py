# generated by datamodel-codegen:
#   filename:  handshake.schema.json

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, ConfigDict, conint, constr


class Mode(Enum):
    token = 'token'
    mtls = 'mtls'


class Auth(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    mode: Mode
    token: Optional[str] = None
    fingerprint: Optional[str] = None


class Worker(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: constr(min_length=1)
    version: constr(min_length=1)
    hostname: constr(min_length=1)


class HandshakePayload(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    protocol: conint(ge=1)
    auth: Auth
    worker: Worker
