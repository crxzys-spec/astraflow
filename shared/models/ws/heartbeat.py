# generated by datamodel-codegen:
#   filename:  heartbeat.schema.json

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, ConfigDict, Field, confloat, conint


class Metrics(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    cpu_pct: Optional[confloat(ge=0.0)] = None
    mem_pct: Optional[confloat(ge=0.0)] = None
    disk_pct: Optional[confloat(ge=0.0)] = None
    inflight: conint(ge=0)
    latency_ms: Optional[conint(ge=0)] = Field(
        None, description='Optional end-to-end latency estimate for latest task.'
    )


class Packages(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    drift: Optional[bool] = None


class HeartbeatPayload(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    healthy: bool
    metrics: Metrics
    packages: Optional[Packages] = None
